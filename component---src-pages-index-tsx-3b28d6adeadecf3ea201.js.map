{"version":3,"file":"component---src-pages-index-tsx-3b28d6adeadecf3ea201.js","mappings":"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","sources":["webpack://borg/./src/components/Layout/Layout.tsx","webpack://borg/./src/components/Header/Header.style.ts","webpack://borg/./src/components/Header/Header.tsx","webpack://borg/./src/components/Content/Content.style.ts","webpack://borg/./src/components/BorgMetrics/BorgMetrics.style.ts","webpack://borg/./src/components/BorgMetrics/BorgMetrics.tsx","webpack://borg/./src/components/BorgChart/BorgChart.style.ts","webpack://borg/./src/components/BorgChart/BorgChart.tsx","webpack://borg/./src/components/Content/Content.tsx","webpack://borg/./src/pages/index.tsx"],"sourcesContent":["import React from 'react'\nimport { createGlobalStyle } from 'styled-components'\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0 auto;\n    font-family: \"Roboto\", sans-serif;\n  }\n`\nconst Layout = ({ children }: { children: React.ReactElement }) => {\n  return (\n    <React.Fragment>\n      <GlobalStyle />\n      {children}\n    </React.Fragment>\n  )\n}\n\nexport default Layout\n","import styled from 'styled-components'\n\nexport const HeaderWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  height: 575px;\n  padding: 0 40px;\n  box-sizing: border-box;\n  background: linear-gradient(270deg, #364053 0%, #191e29 100%);\n`\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n  max-width: 1180px;\n  width: 100%;\n  padding: 60px 0;\n  color: #fff;\n`\n\nexport const Heading = styled.h1`\n  margin: 0;\n  text-align: center;\n  font-size: 40px;\n  margin-bottom: 10px;\n\n  @media (min-width: 768px) {\n    font-size: 80px;\n  }\n`\n\nexport const Tagline = styled.div`\n  text-align: center;\n`\n\nexport const Graph = styled.div`\n  max-width: 720px;\n  height: 270px;\n  width: 100%;\n  margin-top: 20px;\n  background-color: white;\n`\n","import * as React from 'react'\n\nimport * as Styled from './Header.style'\n\nconst Header: React.FC = () => {\n  return (\n    <Styled.HeaderWrapper>\n      <Styled.Content>\n        <Styled.Heading>BORG Token Metrics</Styled.Heading>\n        <Styled.Tagline>\n          Deep-dive into the statistics of BORG and the mechanics of the full\n          SwissBorg Ecosystem.\n        </Styled.Tagline>\n        <Styled.Graph />\n      </Styled.Content>\n    </Styled.HeaderWrapper>\n  )\n}\n\nexport default Header\n","import styled from 'styled-components'\n\nexport const Content = styled.div`\n  max-width: 1440px;\n  padding: 60px 40px;\n  margin: 0 auto;\n\n  > div {\n    display: flex;\n    /* flex-direction: column; */\n    max-width: 1180px;\n    margin: 0 auto;\n  }\n`\n\nexport const Heading = styled.h2`\n  margin: 0 0 40px 0;\n  text-align: center;\n  font-size: 42px;\n`\n\nexport const MetricsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  > div:first-of-type {\n    margin-left: 0;\n  }\n\n  @media (min-width: 768px) {\n    flex-direction: row;\n\n    > div:first-of-type {\n      margin-left: 20px;\n    }\n  }\n`\n","import styled from 'styled-components'\n\nexport const BorgMetrics = styled.ul`\n  list-style: none;\n  width: 100%;\n  margin: 0;\n  padding: 0;\n\n  @media (min-width: 768px) {\n    max-width: 550px;\n  }\n`\n\nexport const BorgMetric = styled.li`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  font-size: 20px;\n  font-weight: 300;\n  box-shadow: 0px 1px 0px rgba(143, 150, 161, 0.5);\n\n  @media (min-width: 768px) {\n    height: 72px;\n    font-size: 24px;\n  }\n`\n\nexport const CopyWrapper = styled.div`\n  display: flex;\n  flex-direction: column-reverse;\n  width: 100%;\n  padding: 12px 0;\n\n  @media (min-width: 768px) {\n    flex-direction: row;\n    align-items: center;\n  }\n`\n\nexport const QuantityWrapper = styled.div`\n  color: #01c38d;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-around;\n  line-height: 30px;\n\n  > div {\n    line-height: inherit;\n  }\n\n  @media (min-width: 768px) {\n    align-items: flex-end;\n    height: 60px;\n  }\n`\n\nexport const Quantity = styled.div`\n  font-weight: 600;\n`\n\nexport const SubText = styled.div`\n  font-size: 16px;\n`\n","import * as React from 'react'\n\n// import { icons } from '../../assets'\nimport { ContentProps } from '../Content/Content'\n\nimport * as Styled from './BorgMetrics.style'\n\ninterface BorgMetricsProps {\n  borgMetricsData: ContentProps['borgMetricsData']\n}\n\ninterface EnrichedBorgMetric {\n  icon: string\n  title: string\n  quantity: string\n  subText?: string\n}\n\ntype EnrichedBorgMetrics = EnrichedBorgMetric[]\n\nconst getPercentage = (decimalValue: number) => (decimalValue * 100).toFixed(2)\n\nconst BorgMetrics: React.FC<BorgMetricsProps> = ({ borgMetricsData }) => {\n  if (!borgMetricsData) return null\n\n  const {\n    circulatingSupplyTokens,\n    stakedBorgTokens,\n    stakedBorgPercentage,\n    borgInYieldTokens,\n    borgInYieldPercentage,\n    borgBurnedTokens,\n    borgInBubackPoolTokens\n  } = borgMetricsData ?? {}\n\n  const enrichedBorgMetrics: EnrichedBorgMetrics = [\n    {\n      // icon: icons.supply,\n      title: 'Remaining circulating supply',\n      quantity: circulatingSupplyTokens.toLocaleString()\n    },\n    {\n      // icon: icons.diamond,\n      title: 'BORG staked',\n      quantity: stakedBorgTokens.toLocaleString(),\n      subText: `(${getPercentage(stakedBorgPercentage)}% of circulating supply)`\n    },\n    {\n      // icon: icons.diamond,\n      title: 'BORG in yield',\n      quantity: borgInYieldTokens.toLocaleString(),\n      subText: `(${getPercentage(\n        borgInYieldPercentage\n      )}% of circulating supply)`\n    },\n    {\n      // icon: icons.burned,\n      title: 'Circulating supply burned',\n      quantity: borgBurnedTokens.toLocaleString()\n    },\n    {\n      // icon: icons.buyback,\n      title: 'BORG in buyback pool',\n      quantity: borgInBubackPoolTokens.toLocaleString()\n    }\n  ]\n\n  return (\n    <Styled.BorgMetrics>\n      {enrichedBorgMetrics.map((metric) => {\n        const { icon: Icon, title, quantity, subText } = metric\n        return (\n          <Styled.BorgMetric>\n            {/* <Icon /> */}\n            <Styled.CopyWrapper>\n              <div>{title}</div>\n              <Styled.QuantityWrapper>\n                <Styled.Quantity>{quantity}</Styled.Quantity>\n                {subText && <Styled.SubText>{subText}</Styled.SubText>}\n              </Styled.QuantityWrapper>\n            </Styled.CopyWrapper>\n          </Styled.BorgMetric>\n        )\n      })}\n    </Styled.BorgMetrics>\n  )\n}\n\nexport default BorgMetrics\n","import styled from 'styled-components'\n\nexport const BorgChart = styled.div`\n  min-height: 300px;\n  width: 100%;\n  background-color: #364053;\n  margin-top: 30px;\n\n  @media (min-width: 768px) {\n    flex-direction: row;\n    margin-top: 0;\n    max-width: 550px;\n  }\n`\n","import * as React from 'react'\n\nimport * as Styled from './BorgChart.style'\n\nconst BorgChart: React.FC = () => {\n  return <Styled.BorgChart />\n}\n\nexport default BorgChart\n","import * as React from 'react'\n\nimport * as Styled from './Content.style'\n\nimport BorgMetrics from '../BorgMetrics/BorgMetrics'\nimport BorgChart from '../BorgChart/BorgChart'\n\nimport { BorgMetricsData } from '../../types'\n\nexport interface ContentProps {\n  borgMetricsData?: BorgMetricsData\n}\n\nconst Content: React.FC<ContentProps> = ({ borgMetricsData }) => {\n  return (\n    <Styled.Content>\n      <Styled.Heading>Breakdown of BORG's circulating supply</Styled.Heading>\n      <Styled.MetricsWrapper>\n        <BorgMetrics borgMetricsData={borgMetricsData} />\n        <BorgChart />\n      </Styled.MetricsWrapper>\n    </Styled.Content>\n  )\n}\n\nexport default Content\n","import React, { useEffect, useState, ReactElement, FC } from 'react'\nimport type { HeadFC, PageProps } from 'gatsby'\n\nimport Layout from '../components/Layout/Layout'\nimport Header from '../components/Header/Header'\nimport Content from '../components/Content/Content'\n\nimport { BorgMetricsData } from '../types'\n\nconst HomePage: FC<PageProps> = (): ReactElement => {\n  const [borgMetricsData, setBorgMetricsData] = useState<BorgMetricsData>()\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const fetchBorgMetricsData = await fetch(\n        'https://corsproxy.io/?https://borg-api-techchallenge.swissborg-stage.com/api/borg-stats'\n      )\n      const borgMetricsData = await fetchBorgMetricsData.json()\n\n      setBorgMetricsData(borgMetricsData)\n    }\n\n    fetchData()\n  }, [])\n\n  return (\n    <Layout>\n      <>\n        <Header />\n        <Content borgMetricsData={borgMetricsData} />\n      </>\n    </Layout>\n  )\n}\n\nexport default HomePage\n\nexport const Head: HeadFC = () => <title>Home Page</title>\n"],"names":["GlobalStyle","createGlobalStyle","_ref","children","React","HeaderWrapper","styled","div","Content","Heading","h1","Tagline","Graph","Styled","h2","MetricsWrapper","BorgMetrics","ul","BorgMetric","li","CopyWrapper","QuantityWrapper","Quantity","SubText","getPercentage","decimalValue","toFixed","borgMetricsData","circulatingSupplyTokens","stakedBorgTokens","stakedBorgPercentage","borgInYieldTokens","borgInYieldPercentage","borgBurnedTokens","borgInBubackPoolTokens","enrichedBorgMetrics","title","quantity","toLocaleString","subText","map","metric","icon","Icon","BorgChart","setBorgMetricsData","useState","useEffect","async","fetchBorgMetricsData","fetch","json","fetchData","Layout","Header","Head"],"sourceRoot":""}